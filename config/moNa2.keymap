#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tp_repeat_mo1: tp_repeat_mo1 {
            compatible = "zmk,behavior-hold-tap";
            label = "TP_REPEAT_MO1";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&mo>, <&key_repeat>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 Q      &kp W           &lt 5 E         &lt 5 R           &kp T                                      &kp Y        &kp U              &lt 5 I         &kp O           &kp P
&mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_WIN D  &mt LEFT_SHIFT F  &kp G        &trans         &kp MINUS      &kp H        &mt RIGHT_SHIFT J  &mt LEFT_WIN K  &mt LEFT_ALT L  &mt RCTRL SEMICOLON
&kp Z        &kp X           &kp C           &kp V             &kp B        &lt 4 COLON    &kp SEMICOLON  &kp N        &kp M              &kp COMMA       &kp DOT         &kp SLASH
&mkp MB1     &kp LEFT_WIN    &kp LEFT_ALT    &sk LEFT_SHIFT    &lt 1 SPACE  &lt 2 ESC      &kp BACKSPACE  &lt 2 ENTER                                                     &mo 4
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp PLUS  &kp PERCENT  &kp TILDE                    &trans          &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&mo 3            &kp ASTERISK  &kp HASH  &kp MINUS    &kp GRAVE  &trans    &trans  &kp UNDERSCORE  &kp SINGLE_QUOTE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL
&trans           &kp DOLLAR    &trans    &trans       &trans     &trans    &trans  &kp CARET       &kp AMPERSAND      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH
&trans           &trans        &trans    &trans       &trans     &trans    &trans  &trans                                                                          &kp LS(BACKSLASH)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        layer_2 {
            bindings = <
&kp NUMBER_0             &kp NUMBER_4  &kp NUMBER_5           &kp NUMBER_6             &kp PLUS                         &trans          &trans   &trans        &trans           &trans
&mt RCTRL EQUAL          &kp NUMBER_1  &mt LEFT_WIN NUMBER_2  &mt LEFT_SHIFT NUMBER_3  &kp MINUS   &trans       &trans  &kp LEFT_ARROW  &kp TAB  &kp UP_ARROW  &kp RIGHT_ARROW  &kp COLON
&mt LEFT_SHIFT NUMBER_0  &kp NUMBER_7  &kp NUMBER_8           &kp NUMBER_9             &kp PERIOD  &kp EQUAL    &trans  &trans          &trans   &trans        &trans           &kp LS(BACKSLASH)
&trans                   &trans        &trans                 &trans                   &trans      &trans       &trans  &trans                                                  &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                     &trans          &trans          &trans        &trans           &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans    &trans  &trans          &trans          &trans        &trans           &trans
&trans          &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans          &trans    &mo 5     &mo 5     &trans                               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LCTRL       &mkp MB2  &mkp MB3  &mkp MB1  &trans  &kp NUMBER_4    &trans       &trans        &mkp MB1      &mkp MB3      &mkp MB2      &trans
&kp LEFT_SHIFT  &trans    &mkp MB4  &mkp MB5  &trans  &kp NUMBER_4    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans          &trans    &trans    &trans    &trans  &trans          &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans    &trans    &trans    &trans                          &trans  &trans  &trans  &trans  &trans
&trans  &mkp MB2  &mkp MB3  &mkp MB1  &trans  &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans  &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans    &trans  &trans          &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans          &trans    &lt_to_layer_0 5 A  &mo 5     &trans                    &trans  &trans    &trans    &trans    &trans
&kp LCTRL       &mkp MB2  &mkp MB3            &mkp MB1  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&kp LEFT_SHIFT  &trans    &mkp MB4            &mkp MB5  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans          &trans    &trans              &trans    &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
